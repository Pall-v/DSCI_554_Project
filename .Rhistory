# Rename columns
names(data) <- c("sex", "math_skill", "friend_with_prog", "prog_exp", "difficulty")
# factorize variable in the data
clean_data <-
data %>%
mutate(sex = as_factor(sex),
math_skill = as_factor(math_skill,
levels=c("Below Average",
"Average",
"Above Average"), ordered=TRUE),
friend_with_prog = as_factor(friend_with_prog),
prog_exp = as_factor(prog_exp,
levels=c("None",
"Less than 100 hours",
"Less than 1000 hours",
"More than 1000 hours"), ordered=TRUE),
difficulty = as_factor(difficulty,
levels=c("Easier than average",
"Average",
"More difficult than average"),
ordered=TRUE)
)
clean_data %>%
ggplot() +
theme_bw() +
labs(x = "Self-preceived Diffculty",
# y = "y",
title = "Self-preceived diffculty of DSCI 512") +
theme(plot.title = element_text(size = 13, face = "bold", hjust = 0.5)) +
geom_bar(aes(difficulty))
clean_data %>%
ggplot() +
theme_bw() +
labs(x = "Programming experience prior to the program",
# y = "y",
title = "Level of programming experience prior to the program") +
theme(plot.title = element_text(size = 13, face = "bold", hjust = 0.5)) +
geom_bar(aes(prog_exp))
clean_data %>%
ggplot() +
theme_bw() +
labs(x = "Self-preceived difficulty",
# y = "y",
title = "Self-perceived difficulty vs. Sex") +
theme(plot.title = element_text(size = 13, face = "bold", hjust = 0.5)) +
geom_bar(aes(x = difficulty, fill = sex), position = "dodge")
clean_data %>% ggplot(aes(difficulty, prog_exp)) +
geom_bin2d() +
labs(x = "Difficulty", y = "Programming Experience",
title = "Heatmap of Programming Experience vs. Difficulty") +
theme(plot.title = element_text(size = 13, face = "bold", hjust = 0.5)) +
coord_fixed() +
scale_x_discrete(
labels = function(difficulty)
str_wrap(difficulty, width = 14)
) +
scale_fill_continuous(breaks = c(1, 5, 9))
knitr::opts_chunk$set(echo = TRUE)
suppressPackageStartupMessages(library("tidyverse"))
# Read data
data <- suppressMessages(read_csv("./data/data.csv", skip = 2))
knitr::opts_chunk$set(echo = TRUE)
suppressPackageStartupMessages(library("tidyverse"))
# Read data
data <- suppressMessages(read_csv("./data/data.csv", skip = 2))
# Select data
data <-
data %>%
select(18:22)
# Rename columns
names(data) <- c("sex", "math_skill", "friend_with_prog", "prog_exp", "difficulty")
# factorize variable in the data
clean_data <-
data %>%
mutate(sex = as_factor(sex),
math_skill = as_factor(math_skill,
levels=c("Below Average",
"Average",
"Above Average"), ordered=TRUE),
friend_with_prog = as_factor(friend_with_prog),
prog_exp = as_factor(prog_exp,
levels=c("None",
"Less than 100 hours",
"Less than 1000 hours",
"More than 1000 hours"), ordered=TRUE),
difficulty = as_factor(difficulty,
levels=c("Easier than average",
"Average",
"More difficult than average"),
ordered=TRUE)
)
# Get the size of the data
dim(clean_data)
# Get the strcture of the data
str(clean_data)
clean_data %>%
ggplot() +
theme_bw() +
labs(x = "Self-preceived Diffculty",
# y = "y",
title = "Self-preceived diffculty of DSCI 512") +
theme(plot.title = element_text(size = 13, face = "bold", hjust = 0.5)) +
geom_bar(aes(difficulty))
clean_data %>%
ggplot() +
theme_bw() +
labs(x = "Programming experience prior to the program",
# y = "y",
title = "Level of programming experience prior to the program") +
theme(plot.title = element_text(size = 13, face = "bold", hjust = 0.5)) +
geom_bar(aes(prog_exp))
clean_data %>%
ggplot() +
theme_bw() +
labs(x = "Self-preceived difficulty",
# y = "y",
title = "Self-perceived difficulty vs. Sex") +
theme(plot.title = element_text(size = 13, face = "bold", hjust = 0.5)) +
geom_bar(aes(x = difficulty, fill = sex), position = "dodge")
clean_data %>% ggplot(aes(difficulty, prog_exp)) +
geom_bin2d() +
theme_bw() +
labs(x = "Difficulty", y = "Programming Experience",
title = "Heatmap of Programming Experience vs. Difficulty") +
theme(plot.title = element_text(size = 13, face = "bold", hjust = 0.5)) +
coord_fixed() +
scale_x_discrete(
labels = function(difficulty)
str_wrap(difficulty, width = 14)
) +
scale_fill_continuous(breaks = c(1, 5, 9))
knitr::opts_chunk$set(echo = TRUE)
suppressPackageStartupMessages(library("tidyverse"))
# Read data
data <- suppressMessages(read_csv("./data/data.csv", skip = 2))
# Select data
data <-
data %>%
select(18:22)
knitr::opts_chunk$set(echo = TRUE)
suppressPackageStartupMessages(library("tidyverse"))
# Read data
data <- suppressMessages(read_csv("./data/data.csv", skip = 2))
# Select data
data <-
data %>%
select(18:22)
# Rename columns
names(data) <- c("sex", "math_skill", "friend_with_prog", "prog_exp", "difficulty")
# factorize variable in the data
clean_data <-
data %>%
mutate(sex = as_factor(sex),
math_skill = as_factor(math_skill,
levels=c("Below Average",
"Average",
"Above Average"), ordered=TRUE),
friend_with_prog = as_factor(friend_with_prog),
prog_exp = as_factor(prog_exp,
levels=c("None",
"Less than 100 hours",
"Less than 1000 hours",
"More than 1000 hours"), ordered=TRUE),
difficulty = as_factor(difficulty,
levels=c("Easier than average",
"Average",
"More difficult than average"),
ordered=TRUE)
)
# Get the size of the data
dim(clean_data)
# Get the strcture of the data
str(clean_data)
clean_data %>%
ggplot() +
theme_bw() +
labs(x = "Self-preceived Diffculty",
# y = "y",
title = "Self-preceived diffculty of DSCI 512") +
theme(plot.title = element_text(size = 13, face = "bold", hjust = 0.5)) +
geom_bar(aes(difficulty))
clean_data %>%
ggplot() +
theme_bw() +
labs(x = "Programming experience prior to the program",
# y = "y",
title = "Level of programming experience prior to the program") +
theme(plot.title = element_text(size = 13, face = "bold", hjust = 0.5)) +
geom_bar(aes(prog_exp))
clean_data %>%
ggplot() +
theme_bw() +
labs(x = "Self-preceived difficulty",
# y = "y",
title = "Self-perceived difficulty vs. Sex") +
theme(plot.title = element_text(size = 13, face = "bold", hjust = 0.5)) +
geom_bar(aes(x = difficulty, fill = sex), position = "dodge")
clean_data %>% ggplot(aes(difficulty, prog_exp)) +
geom_bin2d() +
theme_bw() +
labs(x = "Difficulty", y = "Programming Experience",
title = "Heatmap of Programming Experience vs. Difficulty") +
theme(plot.title = element_text(size = 13, face = "bold", hjust = 0.5)) +
coord_fixed() +
scale_x_discrete(
labels = function(difficulty)
str_wrap(difficulty, width = 14)
) +
scale_fill_continuous(breaks = c(1, 5, 9))
?read_csv
?read_csv
suppressPackageStartupMessages(library("readr"))
source('~/Documents/GitHub/DSCI_554_Project/Milestone2/EDA.R')
setwd("~/Documents/GitHub/DSCI_554_Project/Milestone2")
source('~/Documents/GitHub/DSCI_554_Project/Milestone2/EDA.R')
source('~/Documents/GitHub/DSCI_554_Project/Milestone2/EDA.R', echo=TRUE)
source('~/Documents/GitHub/DSCI_554_Project/Milestone2/EDA.R', echo=TRUE)
?as.factor
?as_facttor()
source('~/Documents/GitHub/DSCI_554_Project/Milestone2/EDA.R', echo=TRUE)
source('~/Documents/GitHub/DSCI_554_Project/Milestone2/EDA.R', echo=TRUE)
source('~/Documents/GitHub/DSCI_554_Project/Milestone2/EDA.R', echo=TRUE)
source('~/Documents/GitHub/DSCI_554_Project/Milestone2/EDA.R', echo=TRUE)
# Read data
data <- read.table(textConnection(getURL(
"https://s3-us-west-2.amazonaws.com/dsci525-lab3-bucket/data/data.csv"
)),skip = 2)
knitr::opts_chunk$set(echo = TRUE)
suppressPackageStartupMessages(library(tidyverse))
suppressPackageStartupMessages(library(knitr))
# Read data
data <- suppressMessages(read_csv("./data/data.csv", skip = 2))
# Select data
data <-
data %>%
select(18:22)
# Rename columns
names(data) <- c("sex", "math_skill", "friend_with_prog", "prog_exp", "difficulty")
# factorize variable in the data
clean_data <-
data %>%
mutate(sex = as_factor(sex),
math_skill = factor(math_skill,
levels=c("Below Average",
"Average",
"Above Average"), ordered=TRUE),
friend_with_prog = as_factor(friend_with_prog),
prog_exp = factor(prog_exp,
levels=c("None",
"Less than 100 hours",
"Less than 1000 hours",
"More than 1000 hours"), ordered=TRUE),
difficulty = factor(difficulty,
levels=c("Easier than average",
"Average",
"More difficult than average"),
ordered=TRUE)
)
# Get the size of the data
dim(clean_data)
# Get the strcture of the data
str(clean_data)
# cross classication counts for difficulty by sex
kable(table(clean_data$difficulty, clean_data$sex))
# cross classication counts for difficulty by math_skill
kable(table(clean_data$difficulty, clean_data$math_skill))
# cross classication counts for difficulty by friend_with_prog
kable(table(clean_data$difficulty, clean_data$friend_with_prog))
# cross classication counts for difficulty by prog_exp
kable(table(clean_data$difficulty, clean_data$prog_exp))
clean_data %>%
ggplot() +
theme_bw() +
labs(x = "Self-preceived Diffculty",
# y = "y",
title = "Self-preceived diffculty of DSCI 512") +
theme(plot.title = element_text(size = 13, face = "bold", hjust = 0.5)) +
geom_bar(aes(difficulty))
clean_data %>%
ggplot() +
theme_bw() +
labs(x = "Programming experience prior to the program",
# y = "y",
title = "Level of programming experience prior to the program") +
theme(plot.title = element_text(size = 13, face = "bold", hjust = 0.5)) +
geom_bar(aes(prog_exp))
clean_data %>%
ggplot() +
theme_bw() +
labs(x = "Self-preceived difficulty",
# y = "y",
title = "Self-perceived difficulty vs. Sex") +
theme(plot.title = element_text(size = 13, face = "bold", hjust = 0.5)) +
geom_bar(aes(x = difficulty, fill = sex), position = "dodge")
clean_data %>% ggplot(aes(difficulty, prog_exp)) +
geom_bin2d() +
theme_bw() +
labs(x = "Difficulty", y = "Programming Experience",
title = "Heatmap of Programming Experience vs. Difficulty") +
theme(plot.title = element_text(size = 13, face = "bold", hjust = 0.5)) +
coord_fixed() +
scale_x_discrete(
labels = function(difficulty)
str_wrap(difficulty, width = 14)
) +
scale_fill_continuous(breaks = c(1, 5, 9))
knitr::opts_chunk$set(echo = TRUE)
suppressPackageStartupMessages(library(tidyverse))
suppressPackageStartupMessages(library(knitr))
# Read data
data <- suppressMessages(read_csv("./data/data.csv", skip = 2))
# Select data
data <-
data %>%
select(18:22)
# Rename columns
names(data) <- c("sex", "math_skill", "friend_with_prog", "prog_exp", "difficulty")
# factorize variable in the data
clean_data <-
data %>%
mutate(sex = as_factor(sex),
math_skill = factor(math_skill,
levels=c("Below Average",
"Average",
"Above Average"), ordered=TRUE),
friend_with_prog = as_factor(friend_with_prog),
prog_exp = factor(prog_exp,
levels=c("None",
"Less than 100 hours",
"Less than 1000 hours",
"More than 1000 hours"), ordered=TRUE),
difficulty = factor(difficulty,
levels=c("Easier than average",
"Average",
"More difficult than average"),
ordered=TRUE)
)
# Get the size of the data
dim(clean_data)
# Get the strcture of the data
str(clean_data)
# cross classication counts for difficulty by sex
kable(table(clean_data$difficulty, clean_data$sex))
# cross classication counts for difficulty by math_skill
kable(table(clean_data$difficulty, clean_data$math_skill))
# cross classication counts for difficulty by friend_with_prog
kable(table(clean_data$difficulty, clean_data$friend_with_prog))
# cross classication counts for difficulty by prog_exp
kable(table(clean_data$difficulty, clean_data$prog_exp))
clean_data %>%
ggplot() +
theme_bw() +
labs(x = "Self-preceived Diffculty",
# y = "y",
title = "Self-preceived diffculty of DSCI 512") +
theme(plot.title = element_text(size = 13, face = "bold", hjust = 0.5)) +
geom_bar(aes(difficulty))
clean_data %>%
ggplot() +
theme_bw() +
labs(x = "Programming experience prior to the program",
# y = "y",
title = "Level of programming experience prior to the program") +
theme(plot.title = element_text(size = 13, face = "bold", hjust = 0.5)) +
geom_bar(aes(prog_exp))
clean_data %>%
ggplot() +
theme_bw() +
labs(x = "Self-preceived difficulty",
# y = "y",
title = "Self-perceived difficulty vs. Sex") +
theme(plot.title = element_text(size = 13, face = "bold", hjust = 0.5)) +
geom_bar(aes(x = difficulty, fill = sex), position = "dodge")
clean_data %>% ggplot(aes(difficulty, prog_exp)) +
geom_bin2d() +
theme_bw() +
labs(x = "Difficulty", y = "Programming Experience",
title = "Heatmap of Programming Experience vs. Difficulty") +
theme(plot.title = element_text(size = 13, face = "bold", hjust = 0.5)) +
coord_fixed() +
scale_x_discrete(
labels = function(difficulty)
str_wrap(difficulty, width = 14)
) +
scale_fill_continuous(breaks = c(1, 5, 9))
stat.desc(clean_data, desc=F)
library(stats)
stat.desc(clean_data, desc=F)
summarise(clean_data)
clean_data
summarise_all(clean_data)
summary.factor(clean_data)
summary.data.frame(clean_data)
summary.matrix(clean_data)
knitr::opts_chunk$set(echo = TRUE)
suppressPackageStartupMessages(library(MASS))
suppressPackageStartupMessages(library(tidyverse))
suppressPackageStartupMessages(library(knitr))
suppressPackageStartupMessages(library(lmtest))
# Read data
data <- suppressMessages(read_csv("../Milestone2/data/data.csv", skip = 2))
# Select data
data <-
data %>%
dplyr::select(18:22)
# Rename columns
names(data) <- c("sex", "math_skill", "friend_with_prog", "prog_exp", "difficulty")
# factorize variable in the data
clean_data <-
data %>%
mutate(sex = as_factor(sex),
math_skill = factor(math_skill,
levels=c("Below Average",
"Average",
"Above Average"), ordered=TRUE),
friend_with_prog = as_factor(friend_with_prog),
prog_exp = factor(prog_exp,
levels=c("None",
"Less than 100 hours",
"Less than 1000 hours",
"More than 1000 hours"), ordered=TRUE),
difficulty = factor(difficulty,
levels=c("Easier than average",
"Average",
"More difficult than average"),
ordered=TRUE)
)
# cross classication counts for difficulty by sex
kable(prop.table(table(clean_data$difficulty, clean_data$sex)))
# cross classication counts for difficulty by math_skill
kable(prop.table(table(clean_data$difficulty, clean_data$math_skill)))
# cross classication counts for difficulty by friend_with_prog
kable(prop.table(table(clean_data$difficulty, clean_data$friend_with_prog)))
# cross classication counts for difficulty by prog_exp
kable(prop.table(table(clean_data$difficulty, clean_data$prog_exp)))
#Null model, no predictors
olr.M0 <- polr(difficulty~1, data=clean_data)
#Full model
olr.M1 <- polr(difficulty~sex+math_skill+friend_with_prog+prog_exp, data=clean_data)
olr.M1 <- polr(difficulty~sex+math_skill+friend_with_prog+prog_exp, data=clean_data)
#Are all variables good predictors?
lrtest(olr.M1, olr.M0)
# Reduced model, with our main variabel
olr.M2 <- polr(difficulty~prog_exp, data=clean_data)
#Drafting other models - PV
# sex, math_skill, friend_with_prog, prog_exp
# need to try confounders by themselves?
olr.M2 <- polr(difficulty~prog_exp+sex, data=clean_data) #Reduced model, without interaction.
olr.M3 <- polr(difficulty~prog_exp+math_skill, data=clean_data)     #Reduced model, with only pared.
olr.M4 <- polr(difficulty~prog_exp+friend_with_prog, data=clean_data)       #Reduced model, with only gpa.
olr.M2 <- polr(apply~pared+gpa, data=score) #Reduced model, without interaction.
olr.M1 <- polr(difficulty~sex+math_skill+friend_with_prog+prog_exp, data=clean_data)
m <- polr(difficulty~sex+math_skill+friend_with_prog+prog_exp, data=clean_data, Hess=TRUE)
m <- polr(difficulty~sex+math_skill+friend_with_prog+prog_exp, data=clean_data, Hess=TRUE)
summary(m)
m <- polr(difficulty~sex+math_skill+friend_with_prog+prog_exp, data=clean_data, Hess=TRUE)
summary(m)$coef
summary(m)
m <- polr(difficulty~sex+math_skill+friend_with_prog+prog_exp, data=clean_data, Hess=TRUE)
summary(m)
m <- polr(difficulty~sex+math_skill+friend_with_prog+prog_exp, data=clean_data, type="probs", Hess=TRUE)
m <- polr(difficulty~sex+math_skill+friend_with_prog+prog_exp, data=clean_data, Hess=TRUE)
summary(m)
# p-values
ctable <- coef(summary(m))
p <- pnorm(abs(ctable[, "t value"]), lower.tail = FALSE) * 2
ctable <- cbind(ctable, "p value" = p)
ctable
# CI
ci <- confint(m)
# OR and Ci
exp(cbind(OR = coef(m), ci))
# Read data
data <- suppressMessages(read_csv("../Milestone2/data/data.csv", skip = 2))
# Select data
data <-
data %>%
dplyr::select(18:22)
# Rename columns
names(data) <- c("sex", "math_skill", "friend_with_prog", "prog_exp", "difficulty")
# factorize variable in the data
clean_data <-
data %>%
mutate(sex = as_factor(sex),
math_skill = factor(math_skill,
levels=c("Below Average",
"Average",
"Above Average"), ordered=TRUE),
friend_with_prog = as_factor(friend_with_prog),
prog_exp = factor(prog_exp,
levels=c("None",
"Less than 100 hours",
"Less than 1000 hours",
"More than 1000 hours"), ordered=TRUE),
difficulty = factor(difficulty,
levels=c("Easier than average",
"Average",
"More difficult than average"),
ordered=TRUE)
)
View(clean_data)
View(clean_data)
str(clean_data)
str(clean_data$difficulty)
#Are all variables good predictors?
lrtest(olr.M1, olr.M0)
olr.M2 <- polr(difficulty~prog_exp+sex, data=clean_data) #Reduced model, without interaction.
lrtest(olr.M1, olr.M2)
# Reduced model, with our main variabel
olr.M2 <- polr(difficulty~prog_exp, data=clean_data)
lrtest(olr.M1, olr.M2)
lrtest(olr.M1, olr.M3)
